#Kernel is a comand line tool
#Author: Joseph Martins
#Project-name: Kernel
#it makes creation of flask project easy and more fun
#oh yeah what if i say the same for DB connection....huh?


#let's import all needed modules.....huh?


import sys

from kernelling.kernel_c import Kernel




#this part done is the command line structure n response department...the exact execution is up...haha Thanks...




#instantiate the kernel..

krnl=Kernel()

#the cmd data reciever goes here
# lets check if all the user wants to do is know the kernel number or not

def kernel():

	if len(sys.argv)>1 and len(sys.argv)<3: 

		"""if the user didnt input more than one parameter into the comand line then run this function, so if the user 	   puts d about keyword then just return him details of the kernel , else perform what kernel is best for..
		"""

		if sys.argv[1]=='-about':
			print "Kernel: Your No1 command line tool...\n"
			print "Kernel version is 0.01 enjoy...\n"		
			print "If you want to support codically!! go check our gitHub page...Thanks.."
		else:
			#create basic flask application
			krnl.createBasicApp(sys.argv[1])


	elif len(sys.argv)>2 and len(sys.argv)<4: 

		"""if the user didnt input more than three parameter into the command line then run this function, this function can be used to perform multiple processes like create professional app config and so on"""

		if sys.argv[2]=='-pro':
			"""
				Production keyword is gonna be used to create a professional flask app config
				with standard wsgi file
			"""
			#create basic flask application
			krnl.createProductionApp(sys.argv[1])
		else:
			#create basic flask application
			#krnl.createBasicApp(sys.argv[1])
			print "opps error"




	else:
		print "Error Report: No project name was inputed...please do that\n"

		print "Here is a tip..\n"

		print "Type the project name soon after the 'Python kernel' command\n"

		print "Much like 'python kernel <appName>\n"

		print "Hope that helped"

#invoke kernel function
kernel()